// Generated by CoffeeScript 1.8.0
var Pool, Processor;

Pool = require('./pool').Pool;

Processor = (function() {
  function Processor(job, maxProcesses, numRetries) {
    this.maxProcesses = maxProcesses != null ? maxProcesses : 1;
    this.numRetries = numRetries != null ? numRetries : 0;
    this.pool = new Pool(job);
    this.processing = 0;
    this.waitingQueue = [];
  }

  Processor.prototype.run = function() {
    if (this.processing++ < this.maxProcesses) {
      return this.createWorker(arguments);
    } else {
      return this.pushToWaitingQueue(arguments);
    }
  };

  Processor.prototype.createWorker = function(args) {
    var job, self, worker;
    self = this;
    worker = this.pool.getWorker();
    worker.numRetries = this.numRetries;
    job = function(err) {
      if (err && worker.numRetries-- > 0) {
        worker.run(job, args);
        return;
      }
      self.processing--;
      self.pool.dispose(worker);
      if (self.waitingQueue.length) {
        return self.createWorker(self.popFromWaitingQueue());
      }
    };
    return worker.run(job, args);
  };

  Processor.prototype.pushToWaitingQueue = function(args) {
    return this.waitingQueue.push(args);
  };

  Processor.prototype.popFromWaitingQueue = function() {
    return this.waitingQueue.shift();
  };

  return Processor;

})();

module.exports.Processor = Processor;
